const hhim = require('./utils/HH_WMP_SDK.js');
const eventOption = {};
const dateUtil = require('./utils/dateUtil.js');
const commonUtil = require('./utils/commonUtil.js');
const log = require('./utils/logUtil.js');
const ring = wx.createInnerAudioContext();
var that = this;
var livePlayUrl;
var playStart = false,
  pushStart = false;
var onLoading = true;
var code1101 = 0,
  code1308 = 0;
var secondes = 0;
var pageIsShowing = true;
var famOrderId = '';
var attached = false;
var callStatus = {
  openCamera: false
};

Component({
  behaviors: [require('./hhBehaviors.js')],
  /**
   * 组件的属性列表
   */
  properties: {
    dept: {
      type: String,
      value: ''
      // observer(newVal, oldVal, changedPath) {
      //   this.propertyChanged(newVal, oldVal, changedPath);
      // }
    },
    logoImage: {
      type: String,
      value: 'https://imgs.hh-medic.com/icon/wmp/online-logo-hh.png'
    },
    waittingText: {
      type: String,
      value: '预计接通时间:'
    },
    appointedDoctorId: {
      type: String,
      value: ''
    },
    appointedOrderId: {
      type: String,
      value: ''
    },
    medicRecordId: {
      type: String,
      value: ''
    },
    patient: {
      type: String,
      value: ''
    },
    hospitalId: {
      type: String,
      value: ''
    },
    cameraTimeoutSeconds: {
      type: String,
      value: '10'
    },
    cameraTimeoutMessage: {
      type: String,
      value: '打开摄像头失败，请重启微信再呼叫'
    }
  },

  /**
   * 组件的初始数据
   */
  data: {
    callImmediate: false,
    status: 0, //状态码。1:接入中，显示logo，2:显示视频画面
    pushUrl: '', //本地视频推流地址
    playUrl: '', //播放地址
    pusher: null, //推流对象
    player: null, //播放对象
    photoUrl: '', //照片url
    license: '',
    name: '', //姓名
    videoTime: '', //已视频时长
    videoTimeStart: null, //开始时间
    timeout: 60, //当前超时倒计时
    enableCamera: true, //是否启用本地推流摄像头
    showExtControls: false, //是否显示扩展按纽
    extControlHeight: 35, //扩展信息栏高度
    extControlImgSrc: 'https://imgs.hh-medic.com/icon/wmp/up.png', //图片地址
    pusherVisible: 'hidden', //是否显示本地推流画面
    playerVisible: 'hidden', //是否显示本地推流画面
    t301: null, //振铃计时器
    t301Timeout: 60, //振铃时长
    demo: 0,
    playMode: "HD",
    uiStyle: {
      objFit: 'fillCrop',
      muted: false,
      waittingText: '',
      extBtns: true,
      license: '执业资格证'
    },
    animationData: {},
    showDemoTip: false,
    callBtnsVisible: false,
    playerFullscreen: false,
    logoWidth: 235,
    pusherHeight: 167,
    pusherWidth: 120,
    isBackCamera: false,
    flashIcon: 'https://imgs.hh-medic.com/icon/wmp/flash-off.png',
    showSettingBtn: false,
    showCancelBtn: false,
    showCalledPanel: false,
    question: null,
    feedbackVisible: 'hidden'
  },

  lifetimes: {
    attached() {
      that = this;
      var pusher = wx.createLivePusherContext(this);
      that.setData({
        pusher: pusher
      });

      var player = wx.createLivePlayerContext('livePlayer', this);
      that.setData({
        player: player
      });

      if (2 == that.data.status) {
        that._startVideo();
        that._showPlayer();
        that._showPusher();
      }

      ring.autoplay = false;
      ring.loop = true;
      ring.volume = 1;
      ring.src = 'https://imgs.hh-medic.com/icon/ring.mp3';
      // wx.setInnerAudioOption({
      //   mixWithOther: true,
      //   obeyMuteSwitch: false
      // })
      attached = true;
      onLoading = true;
    },
    ready() {
      that._initHhWmp();
    },
    detached() {
      hhim.logout();
      ring.stop();
    }
  },

  pageLifetimes: {
    show() {
      // 页面被展示
      pageIsShowing = true;
      wx.setKeepScreenOn({
        keepScreenOn: true
      })
      code1101 = 0;
      if (!onLoading) {
        if (hhim.loginStatus()) {
          hhim.sendLog('1', 'hh-call onShow');
          if (1 == that.data.status) {
            setTimeout(function() {
              ring.play();
            }, 500)
          } else {
            ring.stop();
          }
        } else {
          ring.stop();
          wx.navigateBack({
            delta: 1
          })
        }
      }
    },

    hide() {
      // 页面被隐藏
      pageIsShowing = false;
      ring.stop();
      if (hhim.loginStatus()) {
        hhim.sendLog('1', 'hh-call onHide');
      }
    }
  },

  /**
   * 组件的方法列表
   */
  methods: {
    // propertyChanged(newVal, oldVal, changedPath) {
    //   if ('dept' == changedPath) {
    //     if (newVal && oldVal) {
    //       that._initHhWmp();
    //     }
    //   }
    // },

    _triggerEvent(detail) {
      that.triggerEvent('callevent', detail, eventOption)
    },

    _initHhWmp() {
      if (!that.data.userUuid || !that.data.userToken ||
        !that.data.sdkProductId || !that.data.openId ||
        (!that.data.dept &&
          (this.data.appointedDoctorId || this.data.appointedOrderId) &&
          !that.data.medicRecordId)) {
        console.error('呼叫信息不全');
        return;
      }
      var host = this.getHost();
      hhim.init({
        debug: false,
        wsServer: host.wsServer,
        fileServer: host.wmpHost + 'im/upload/'
      });

      hhim.login(that.data.sdkProductId, '', that.data.userUuid, that.data.userToken, false);
      var count = 30;
      var loginInterval = setInterval(function() {
        if (hhim.loginStatus()) {
          onLoading = false;
          clearInterval(loginInterval);
          that._triggerEvent({
            name: 'login',
            data: {
              success: true
            },
            message: ''
          });
          that._addMonitorLog();
          that._getStyle();
        }
        count--;
        if (count <= 0) {
          onLoading = false;
          clearInterval(loginInterval);
          that._triggerEvent({
            name: 'login',
            data: {
              success: false
            },
            message: ''
          });
          wx.showModal({
            title: '错误',
            content: '登录失败，请检查登录参数',
            showCancel: false,
            success: function() {
              wx.navigateBack({
                delta: 1
              })
            }
          })
        }
      }, 100);
    },

    _addMonitorLog() {
      wx.getSystemInfo({
        success: function(res) {
          hhim.sendLog('1', JSON.stringify(res));
        }
      })
      wx.getNetworkType({
        success(res) {
          hhim.sendLog('1', 'networkType:' + res.networkType);
        }
      })
      wx.onNetworkStatusChange(function(res) {
        if (!res.isConnected) {
          //that.hangup(false, 'HANGUP', false);
        }
        hhim.sendLog('1', 'networkStatusChange:' + JSON.stringify(res));
      })
      wx.onMemoryWarning(function() {
        hhim.sendLog('1', 'onMemoryWarning');
      })
    },

    /**
     * 播放监控
     */
    _playerMonitor() {
      setTimeout(function() {
        if (!playStart) {
          that.data.player.play();
          that._playerMonitor();
        }
      }, 2000)
    },

    /**
     * 推流监控
     */
    _pusherMonitor() {
      setTimeout(function() {
        if (!pushStart) {
          that.data.pusher.start();
          that._pusherMonitor();
        }
      }, 3000)
    },

    /**
     * 显示推流画面
     */
    _showPusher() {
      that.setData({
        pusherVisible: ''
      })
    },

    /**
     * 隐藏推流画面
     */
    _hidePusher() {
      that.setData({
        pusherVisible: 'hidden'
      })
    },


    /**
     * 显示播放画面
     */
    _showPlayer() {
      that.setData({
        playerVisible: ''
      })
    },

    /**
     * 隐藏播放画面
     */
    _hidePlayer() {
      that.setData({
        playerVisible: 'hidden'
      })
    },

    /** 启动推流和播放 */
    _startVideo() {
      ring.stop();
      if (!that.data.pushUrl || !that.data.playUrl) {
        return;
      }

      that.setData({
        pusherHeight: 167,
        pusherWidth: 120
      })

      that._showPusher();
      that._showPlayer();
      playStart = false;
      that.data.player.play();
      that._playerMonitor();
      if (that.data.playerFullscreen) {
        that.data.player.requestFullScreen();
      }
      that._startVideoTimer();
    },

    /** 停止推流和播放 */
    _stopVideo() {
      ring.stop();
      if (that.data.pusher) {
        that.data.pusher.stop();
      }
      if (that.data.player) {
        that.data.player.stop();
        that.data.player.exitFullScreen();
      }
      that._hidePusher();
      that._hidePlayer();
      that.setData({
        videoTimeStart: null,
        showExtControls: true,
        demoVideoVisible: 'hidden'
      })
      that._tapFolding();
    },

    /** 点击显示隐藏扩展控制按纽 */
    _tapFolding() {
      if (that.data.showExtControls) {
        that.setData({
          showExtControls: false,
          extControlHeight: 35,
          extControlImgSrc: 'https://imgs.hh-medic.com/icon/wmp/up.png'
        })
      } else {
        that.setData({
          showExtControls: true,
          extControlHeight: 185,
          extControlImgSrc: 'https://imgs.hh-medic.com/icon/wmp/down.png'
        })
      }
    },

    _statechangePlayer(e) {
      if (2004 == e.detail.code) {
        playStart = true;
      }
      if (e.detail.code < 0) {
        //出错之后尝试重启播放
        that.data.player.stop();
        playStart = false;
        that._playerMonitor();
      }
      hhim.sendLog('3', 'status:' + e.detail.code);
    },

    _netChangedPlayer(e) {
      var nInfo = {
        vbr: e.detail.info.videoBitrate,
        abr: e.detail.info.audioBitrate,
        fps: parseInt(e.detail.info.videoFPS),
        spd: e.detail.info.netSpeed,
        jit: e.detail.info.netJitter,
        vw: e.detail.info.videoWidth,
        vh: e.detail.info.videoHeight
      }
      hhim.sendLog('3', 'netinfo:' + JSON.stringify(nInfo));
    },

    _errorPlayer(e) {
      hhim.sendLog('3', 'error:' + e.detail.errCode);
    },


    _onLivePusherError: function(e) {
      hhim.sendLog('2', 'error:' + e.detail.errCode);
      if (10001 == e.detail.errCode || 10002 == e.detail.errCode) {
        //启动摄像头或麦克风失败
        that._hangup(true, 'HANGUP', false);
      }
    },

    _onLivePusherNetInfo(e) {
      var nInfo = {
        vbr: e.detail.info.videoBitrate,
        abr: e.detail.info.audioBitrate,
        fps: parseInt(e.detail.info.videoFPS),
        spd: e.detail.info.netSpeed,
        jit: e.detail.info.netJitter,
        vw: e.detail.info.videoWidth,
        vh: e.detail.info.videoHeight
      }
      hhim.sendLog('2', 'netinfo:' + JSON.stringify(nInfo));
    },

    _onLivePusherChange: function(e) {
      if (1002 == e.detail.code) {
        pushStart = true;
      }
      hhim.sendLog('2', 'status:' + e.detail.code);
      that._processPusherCode(e.detail.code);
    },

    /** 处理推流状态码 */
    _processPusherCode(code) {
      code = parseInt(code);
      if (1003 == code) {
        //打开摄像头成功
        callStatus.openCamera = true;
        return;
      }
      if (-1308 == code) {
        code1308++;
      }
      if (3 == code1308) {
        code1308++;
        wx.showToast({
          title: '网络错误请重拨',
          icon: 'none',
          duration: 2000
        })
        setTimeout(function() {
          that._hangup(true, 'HANGUP', false);
        }, 2000)
        return;
      }

      if (1101 == code) {
        code1101++;
      }
      if (3 == code1101) {
        code1101++;
        wx.showToast({
          title: '网络卡顿...',
          icon: 'loading',
          duration: 2000
        })
      }
    },

    /** 封装wx.showLoading */
    _showLoading(obj) {
      if (pageIsShowing) {
        wx.showLoading({
          title: obj.title,
        })
        setTimeout(function() {
          wx.hideLoading();
        }, 30 * 1000);
      }
    },

    /** 检查用户授权 */
    _checkAuthorize: function(callback) {
      wx.authorize({
        scope: "scope.record",
        success: function() {
          wx.authorize({
            scope: "scope.camera",
            success: function() {
              if (callback) {
                callback(true);
              }
            },
            fail: function() {
              hhim.sendLog('1', 'authorize failed:camera');
              if (callback) {
                callback(false);
              }
            }
          })
        },
        fail: function() {
          hhim.sendLog('1', 'authorize failed:record');
          if (callback) {
            callback(false);
          }
        }
      })
    },

    _getStyle() {
      that._applyStyle();
    },

    _applyStyle() {
      that._doCall(that._preCallCb, that.data.dept);
    },

    _doCall(callback, dept) {
      hhim.sendLog('1', 'authorize check start');
      //检查用户麦克风和摄像头是否已授权
      that._checkAuthorize(function(success) {
        if (!success) {
          //麦克风或摄像头未授权 
          that.setData({
            showSettingBtn: true
          })
          return;
        }
        hhim.sendLog('1', 'authorize successs ');
        hhim.preCall(dept, callback, null,
          that.data.appointedDoctorId,
          that.data.appointedOrderId,
          that.data.medicRecordId,
          that.data.patient,
          that.data.hospitalId);
      })
    },

    _preCallCb(data) {
      //判断当前页面是否已卸载
      if (!pageIsShowing) {
        that._hangup(true, 'CANCEL', true);
        return;
      }

      hhim.sendLog('1', 'push:' + data.livePushUrl);
      hhim.sendLog('1', 'play:' + data.livePlayUrl);
      if (!data.success) {
        that.setData({
          status: 0,
          pushUrl: '',
          playUrl: ''
        })
        var msg = data.message ? data.message : '医生繁忙，请稍后再拨';
        wx.hideLoading();
        wx.showModal({
          title: '错误',
          content: msg,
          showCancel: false,
          success: function() {
            wx.navigateBack({
              delta: 1
            })
          }
        })
        return;
      }
      callStatus.openCamera = false;
      that._showPusher();

      //图片
      var photoUrl = 'https://imgs.hh-medic.com/photo/D2017081615094714624/98A8RC.jpg?x-oss-process=image/resize,m_fixed,w_750';
      if (data.doctor.photourl) {
        photoUrl = data.doctor.photourl;
      }

      var license = '';
      if (data.doctor.license) {
        if (data.doctor.license.indexOf('?x-oss-process') < 0) {
          license = data.doctor.license + '?x-oss-process=image/resize,m_fixed,w_400';
        } else {
          license = data.doctor.license;
        }
      }

      if (data.orderId) {
        famOrderId = data.orderId;
      }
      //显示详情
      that.setData({
        countdown: that.data.t301Timeout,
        photoUrl: photoUrl,
        license: license,
        name: data.doctor.name,
        pushUrl: data.livePushUrl,
        pusherHeight: 140,
        pusherWidth: 100,
        showCancelBtn: true,
        showCalledPanel: false
      })
      livePlayUrl = data.livePlayUrl;

      that._countDown();
      hhim.call(that._callCb, false);
      hhim.on('transfer', that._transfer);
      hhim.on('error', that._hhImError);


      pushStart = false;
      that.data.pusher.start();

      ring.play();
      ring.onTimeUpdate(function() {
        ring.offTimeUpdate();
        pushStart = false;
        that.data.pusher.start();
        that._pusherMonitor();
      });

      setTimeout(function() {
        that.setData({
          status: 1
        })
      }, 1000)
      that._checkCameraIsOpen();
    },

    _callCb(data) {
      ring.stop();
      that.data.pusher.stopBGM();
      if (that.data.t301) {
        clearInterval(that.data.t301);
        that.setData({
          t301: null
        })
      }
      if (1 == data.data) {
        wx.setNavigationBarTitle({
          title: '通话中'
        })
        that.setData({
          playUrl: livePlayUrl,
          status: 2
        })
        wx.vibrateLong();
        //接听，开始推流。重要！！！必须加延时，否则可能导致无规律的拉流失败
        setTimeout(function() {
          that._startVideo();
        }, 500)
      } else {
        //拒绝或错误
        that._hangup(false);
      }
    },

    /** 检查推流摄像头是否已打开 */
    _checkCameraIsOpen() {
      setTimeout(function() {
        if (callStatus.openCamera) {
          //摄像头已打开
          return;
        }
        if (1 != that.data.status && 2 != that.data.status) {
          //不是处于呼叫等待或视频中
          return;
        }
        if (!pageIsShowing) {
          //当前页面没有显示
          return;
        }
        hhim.sendLog('1', 'can not open camera');
        that._hangup(true, 'HANGUP', false);
        wx.showModal({
          title: '错误',
          content: that.data.cameraTimeoutMessage,
          showCancel: false,
          success: function() {
            wx.navigateBack({
              delta: 1
            })
          }
        })

      }, parseInt(this.data.cameraTimeoutSeconds) * 1000);
    },
    /**
     * 显示图片
     */
    _tapShowLicense() {
      if (!that.data.license) {
        return;
      }
      hhim.sendLog('1', 'tapShowLicense');
      wx.previewImage({
        urls: [that.data.license]
      })
    },

    /**
     * 开关闪光灯
     */
    _tapToggleFlash() {
      hhim.sendLog('1', 'tapToggleFlash');
      if (!that.data.isBackCamera) {
        //如果不是后置摄像头
        wx.showToast({
          title: '请切换至后摄像头',
          icon: 'none',
          duration: 2000
        })
        return;
      }

      if (that.data.pusher) {
        that.data.pusher.toggleTorch({
          success: function() {
            that.setData({
              flashIcon: that._toggleFlashIcon()
            })
          }
        });
      }
    },
    /**
     * 开关闪光灯后获取相应的icon
     */
    _toggleFlashIcon() {
      if ('https://imgs.hh-medic.com/icon/wmp/flash-off.png' == that.data.flashIcon) {
        return 'https://imgs.hh-medic.com/icon/wmp/flash-on.png';
      }
      return 'https://imgs.hh-medic.com/icon/wmp/flash-off.png';
    },

    /**
     * 切换前后摄像头
     */
    _switchCamera() {
      if (that.data.pusher) {
        hhim.sendLog('1', 'switchCamera');
        that.data.pusher.switchCamera({
          success: function() {
            that.setData({
              isBackCamera: !that.data.isBackCamera
            })
          }
        });
      }
    },

    /**
     * 选择图片资料，从相册还是拍照
     */
    _selectImage() {
      hhim.sendLog('1', 'selectImage start');
      hhim.switchMode('AUDIO');
      wx.chooseImage({
        count: 1,
        sizeType: ['original'],
        sourceType: ['album', 'camera'],
        success: function(res) {
          // 返回选定照片的本地文件路径列表，tempFilePath可以作为img标签的src属性显示图片
          var tempFilePaths = res.tempFilePaths
          hhim.uploadFile(tempFilePaths[0], function(e) {
            console.log(e);
            e = JSON.parse(e);

            if (200 == e.status) {
              //成功
              var fileUrl = e.data;
              hhim.addAttatch(fileUrl, function(e) {
                console.log(e);
              })
            } else {
              wx.showToast({
                title: '发送失败！',
              })
            }
          });
        },
        complete: function() {
          hhim.sendLog('1', 'selectImage complete');
          hhim.switchMode('VIDEO');
          that._resumeVideo();
        }
      })
    },

    _cancelInitiative(e) {
      ring.stop();
      wx.vibrateLong();
      hhim.sendLog('1', 'cancelInitiative type:' + e.target.dataset.hanguptype);
      that._hangup(true, e.target.dataset.hanguptype);
    },

    _hangup(initiative, hangupType, stayInpage) {
      that._showLoading({
        title: '正在结束...',
      })
      if (!hangupType) {
        hangupType = 'HANGUP'
      }
      var videoTimeSeconds = parseInt((new Date().getTime() - that.data.videoTimeStart) / 1000);
      //清除计时器
      that._clearCountDown();
      that._stopVideo();
      hhim.on('transfer', null);
      hhim.on('error', null);

      that.setData({
        countdown: that.data.t301Timeout,
        status: 0,
        pushUrl: '',
        playUrl: ''
      })
      that._triggerEvent({
        name: 'hangup',
        data: {
          initiative: initiative,
          hangupType: hangupType,
          videoDur: videoTimeSeconds
        },
        message: ''
      });

      if (initiative) {
        hhim.hangup(function(success, data) {
          if (success) {
            //do sth. 
          }
          that._feedback(stayInpage, data);
        }, false, hangupType, videoTimeSeconds);
      } else {
        that._feedback(stayInpage);
        // wx.hideLoading();
        // //是否留在当前页面
        // if (!stayInpage) {
        //   wx.navigateBack({
        //     delta: 1
        //   })
        // }
      }
    },

    /** 评价 */
    _feedback(stayInpage, data) {
      wx.hideLoading();
      if (data && data.question) {
        wx.setNavigationBarTitle({
          title: '评价'
        })
        this.setData({
          question: data.question,
          feedbackVisible: ''
        })
      } else {
        //是否留在当前页面
        if (!stayInpage) {
          console.log('navigateBack...');
          wx.navigateBack({
            delta: 1
          })
        }
      }
    },

    /** 评价窗口关闭事件 */
    _evaClose() {
      this.setData({
        feedbackVisible: 'hidden'
      })
      wx.navigateBack({
        delta: 1
      })
    },
    /** 用户回答调研问题事件 */
    _evaAsk(e) {
      hhim.feedback(famOrderId, that.data.question.id, e.detail.answerText);
    },

    /** 用户打分评价事件 */
    _evaluate(e) {
      hhim.evaluate(famOrderId, e.detail.evaValue, e.detail.evaText);
    },

    /** 倒计时 */
    _countDown() {
      if (that.data.t301) {
        clearInterval(that.data.t301);
      }

      that.setData({
        t301: null,
        timeout: that.data.t301Timeout
      })

      secondes = that.data.t301Timeout;
      var t = setInterval(function() {
        if (2 == that.data.status) {
          //视频进行中
          that._clearCountDown();
          return;
        }
        secondes--;
        that.setData({
          timeout: secondes
        })
        if (secondes < 0) {
          that._clearCountDown();
          that._hangup(true, 'TIMEOUT');
        }
      }, 1000);
      that.setData({
        t301: t
      })
    },

    /** 开始计时器 */
    _startVideoTimer() {
      that.setData({
        videoTimeStart: new Date().getTime()
      })
      var interval = setInterval(function() {
        if (!that.data.videoTimeStart) {
          clearInterval(interval);
          return;
        }
        var vt = parseInt((new Date().getTime() - that.data.videoTimeStart) / 1000);
        that.setData({
          videoTime: dateUtil.formatTimeLength(vt)
        })

      }, 1000)
    },

    /**清除倒计时 */
    _clearCountDown() {
      if (!that.data.t301) {
        return;
      }
      secondes = that.data.t301Timeout;
      ring.stop();
      clearInterval(that.data.t301);
      that.setData({
        t301: null,
        countdown: that.data.t301Timeout
      })
    },

    _transfer(res) {
      hhim.sendLog('1', 'transfe play:' + res.data.livePlayUrl);
      that.setData({
        countdown: that.data.t301Timeout,
        photoUrl: res.data.photoUrl,
        license: res.data.license,
        name: res.data.name,
        pusherHeight: 140,
        pusherWidth: 100,
        showCancelBtn: true,
        showCalledPanel: false
      })
      livePlayUrl = res.data.livePlayUrl;

      that._stopVideo();
      that.setData({
        status: 1
      })

      that._showPusher();
      that._countDown();
      hhim.call(that._callCb, false);
      ring.play();
      ring.onPlay(function() {
        ring.offPlay();
        pushStart = false;
        that.data.pusher.start();
        that._pusherMonitor();
      });
    },

    _resumeVideo() {
      playStart = false;
      pushStart = false;
      that.data.player.play();
      that.data.pusher.start();
      that._playerMonitor();
      that._pusherMonitor();
    },

    _queryCallInfo() {
      hhim.on('transfer', that._transfer);
      hhim.on('callinfo', that._parseCallInfo);
      hhim.on('hangup', that._calledHangup);
      hhim.callInfo();
    },

    _calledHangup() {
      that.hangup(false, 'HANGUP', false);
    },

    _parseCallInfo(res) {
      if ('undefined' == typeof(res) || !res) {
        hhim.on('callinfo', null);
        hhim.on('hangup', null);
        wx.navigateBack({
          delta: 1
        })
        return;
      }
      wx.hideLoading();
      if (res.doctor.name) {
        that.setData({
          name: res.doctor.name
        })
      }
      if (res.doctor.photourl) {
        that.setData({
          photoUrl: res.doctor.photourl + '?x-oss-process=image/resize,m_fixed,w_750'
        })
      }
      if (res.doctor.license) {
        that.setData({
          license: res.doctor.license + '?x-oss-process=image/resize,m_fixed,w_400'
        })
      }

      if (res.livePushUrl) {
        that.setData({
          pushUrl: res.livePushUrl
        })
      }
      if (res.livePlayUrl) {
        livePlayUrl = res.livePlayUrl
      }
      if (res.orderId) {
        famOrderId = res.orderId
      }
      wx.setNavigationBarTitle({
        title: '正在呼叫'
      })

      var pusher = wx.createLivePusherContext(this);
      that.setData({
        pusher: pusher,
        showCancelBtn: false,
        showCalledPanel: true
      })
      that._showPusher();

      ring.play();
      ring.onPlay(function() {
        ring.offPlay();
        pushStart = false;
        that.data.pusher.start();
        that._pusherMonitor();
      });

      wx.hideLoading();
    },

    /** 接听或拒绝 */
    _answerCall(e) {
      ring.stop();
      wx.vibrateLong();
      hhim.callResponse(famOrderId, e.currentTarget.dataset.answer);
      if (1 == parseInt(e.currentTarget.dataset.answer)) {
        //接听
        that.setData({
          playUrl: livePlayUrl,
          status: 2
        })
        wx.setNavigationBarTitle({
          title: '通话中'
        })
        setTimeout(function() {
          that._startVideo();
        }, 500)
      } else {
        //取消
        hhim.on('callinfo', null);
        hhim.on('hangup', null);
        wx.navigateBack({
          delta: 1
        })
      }
    },

    _hhImError: function(e) {
      that._hangup(false, 'HANGUP', false);
    },

    _navBack: function() {
      wx.navigateBack({
        delta: 1
      })
    }
  }
})